function [ net ] = load_net(path)
%LOAD_NET Create net topologie, and load pretrained weights from path.

% Conv1
W1 = load(strcat(path,'/W1.mat'),'W1');
b1 = load(strcat(path,'/b1.mat'),'b1');
net.layers{1} = struct('type', 'conv', ...
                       'name', 'conv1', ...
                       'weights', {{W1, b1}}, ...
                       'pad', 0, ...
                       'stride', 1) ;
% Squash1
net.layers{2} = struct('type', 'relu', ...
                       'name', 'relu1') ;
% MaxPool1
net.layers{3} = struct('type', 'pool', ...
                        'name', 'mpool1', ...
                        'method', 'max', ...
                        'pool', [3 3], ...
                        'stride', 2, ...
                        'pad', [0 1 0 1]) ;

% Conv2
W2 = load(strcat(path,'/W2.mat'),'W2');
b2 = load(strcat(path,'/b2.mat'),'b2');
net.layers{4} = struct('type', 'conv', ...
                       'name', 'conv2', ...
                       'weights', {{W2, b2}}, ...
                       'pad', 0, ...
                       'stride', 1) ;
% Squash2
net.layers{5} = struct('type', 'relu', ...
                       'name', 'relu2') ;
% MaxPool2
net.layers{6} = struct('type', 'pool', ...
                        'name', 'mpool2', ...
                        'method', 'max', ...
                        'pool', [3 3], ...
                        'stride', 2, ...
                        'pad', [0 1 0 1]) ;

% Dense3
W3 = load(strcat(path,'/W3.mat'),'W3');
W3 = reshape(W3,[1,1,size(W3)]);
b3 = load(strcat(path,'/b3.mat'),'b3');
net.layers{7} = struct('type', 'conv', ...
                       'name', 'dense3', ...
                       'weights', {{W3,b3}}, ...
                       'stride', 1, ...
                       'pad', 0) ;
% Squash3
net.layers{8} = struct('type', 'relu', ...
                       'name', 'relu3');

% Dense4
W4 = load(strcat(path,'/W4.mat'),'W4');
W4 = reshape(W4,[1,1,size(W4)]);
b4 = load(strcat(path,'/b4.mat'),'b4');
net.layers{9} = struct('type', 'conv', ...
                       'name', 'dense4', ...
                       'weights', {{W4,b4}}, ...
                       'stride', 1, ...
                       'pad', 0) ;
% Squash4
net.layers{10} = struct('type', 'relu', ...
                       'name', 'relu4') ;   
                   
% Dense5
W5 = load(strcat(path,'/W5.mat'),'W5');
W5 = reshape(W5,[1,1,size(W5)]);
b5 = load(strcat(path,'/b5.mat'),'b5');
net.layers{11} = struct('type', 'conv', ...
                       'name', 'dense5', ...
                       'weights', {{W5,b5}}, ...
                       'stride', 1, ...
                       'pad', 0) ;

% SoftMax5
net.layers{12} = struct('type', 'softmaxloss',...
                        'name','softmax5') ;

end

